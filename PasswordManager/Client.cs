
using System.Security.Cryptography;
using System.Text.Json;

namespace PasswordManager
{
    internal class Client
    {
        private string _path;
        private int _lengthOfKey = 28;
        private string _secretKey;
        public string SecretKey => _secretKey;
        public byte[] RandomBytes;

        public Client(string path)
        {
            _path = path;
            RandomBytes = GenerateSecretKey();

            Dictionary<string, string> secretKeys = new Dictionary<string, string>();
            secretKeys.Add("secret", _secretKey);

            string jsonDict = JsonSerializer.Serialize(secretKeys);
            Console.WriteLine(jsonDict);

            File.WriteAllText(_path, jsonDict); // (path, jsonDict), skapar fil om inte finns, annars skriver den över

            // string text = File.ReadAllText(path);
        }


        private byte[] GenerateSecretKey()
        {
            RandomNumberGenerator generator = RandomNumberGenerator.Create();
            byte[] randomBytes = new byte[_lengthOfKey];
            generator.GetBytes(randomBytes);

            // Saves the generated byte[] to string
            _secretKey = Convert.ToBase64String(randomBytes);

            return randomBytes;
        }


        private void AddKeyToJSON()
        {
        }
    }
}
